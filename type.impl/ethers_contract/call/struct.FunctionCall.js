(function() {
    var type_impls = Object.fromEntries([["stark_evm_adapter",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-FunctionCall%3CB,+M,+D%3E\" class=\"impl\"><a href=\"#impl-Clone-for-FunctionCall%3CB,+M,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B, M, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for FunctionCall&lt;B, M, D&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; FunctionCall&lt;B, M, D&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","stark_evm_adapter::ContractFunctionCall"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-FunctionCall%3CB,+M,+D%3E\" class=\"impl\"><a href=\"#impl-Debug-for-FunctionCall%3CB,+M,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B, M, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for FunctionCall&lt;B, M, D&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","stark_evm_adapter::ContractFunctionCall"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FunctionCall%3CB,+M,+D%3E\" class=\"impl\"><a href=\"#impl-FunctionCall%3CB,+M,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B, M, D&gt; FunctionCall&lt;B, M, D&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;M&gt;,\n    D: Detokenize,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from</a>&lt;T&gt;(self, from: T) -&gt; FunctionCall&lt;B, M, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;H160&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Sets the <code>from</code> field in the transaction to the provided value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.legacy\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">legacy</a>(self) -&gt; FunctionCall&lt;B, M, D&gt;</h4></section></summary><div class=\"docblock\"><p>Uses a Legacy transaction instead of an EIP-1559 one to execute the call</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gas\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">gas</a>&lt;T&gt;(self, gas: T) -&gt; FunctionCall&lt;B, M, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;U256&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Sets the <code>gas</code> field in the transaction to the provided value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gas_price\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">gas_price</a>&lt;T&gt;(self, gas_price: T) -&gt; FunctionCall&lt;B, M, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;U256&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Sets the <code>gas_price</code> field in the transaction to the provided value\nIf the internal transaction is an EIP-1559 one, then it sets both\n<code>max_fee_per_gas</code> and <code>max_priority_fee_per_gas</code> to the same value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.value\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">value</a>&lt;T&gt;(self, value: T) -&gt; FunctionCall&lt;B, M, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;U256&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Sets the <code>value</code> field in the transaction to the provided value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.block\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">block</a>&lt;T&gt;(self, block: T) -&gt; FunctionCall&lt;B, M, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;BlockId&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Sets the <code>block</code> field for sending the tx to the chain</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nonce\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">nonce</a>&lt;T&gt;(self, nonce: T) -&gt; FunctionCall&lt;B, M, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;U256&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Sets the <code>nonce</code> field in the transaction to the provided value</p>\n</div></details></div></details>",0,"stark_evm_adapter::ContractFunctionCall"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FunctionCall%3CB,+M,+D%3E\" class=\"impl\"><a href=\"#impl-FunctionCall%3CB,+M,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B, M, D&gt; FunctionCall&lt;B, M, D&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;M&gt;,\n    M: Middleware,\n    D: Detokenize,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.calldata\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">calldata</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Bytes&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the underlying transaction’s ABI encoded data</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.estimate_gas\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">estimate_gas</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;U256, ContractError&lt;M&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the estimated gas cost for the underlying transaction to be executed</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">call</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;D, ContractError&lt;M&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Queries the blockchain via an <code>eth_call</code> for the provided transaction.</p>\n<p>If executed on a non-state mutating smart contract function (i.e. <code>view</code>, <code>pure</code>)\nthen it will return the raw data from the chain.</p>\n<p>If executed on a mutating smart contract function, it will do a “dry run” of the call\nand return the return type of the transaction without mutating the state</p>\n<p>Note: this function <em>does not</em> send a transaction from your account</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_raw\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">call_raw</a>(\n    &amp;self,\n) -&gt; impl RawCall&lt;'_&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;D, ContractError&lt;M&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a></h4></section></summary><div class=\"docblock\"><p>Returns an implementer of [<code>RawCall</code>] which can be <code>.await</code>d to query the blockchain via\n<code>eth_call</code>, returning the deoded return data.</p>\n<p>The returned call can also be used to override the input parameters to <code>eth_call</code>.</p>\n<p>Note: this function <em>does not</em> send a transaction from your account</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_raw_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">call_raw_bytes</a>(&amp;self) -&gt; CallBuilder&lt;'_, &lt;M as Middleware&gt;::Provider&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a [<code>CallBuilder</code>] which can be <code>.await</code>d to query the blochcain via <code>eth_call</code>,\nreturning the raw bytes from the transaction.</p>\n<p>The returned call can also be used to override the input parameters to <code>eth_call</code>.</p>\n<p>Note: this function <em>does not</em> send a transaction from your account</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">send</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PendingTransaction&lt;'_, &lt;M as Middleware&gt;::Provider&gt;, ContractError&lt;M&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Signs and broadcasts the provided transaction</p>\n</div></details></div></details>",0,"stark_evm_adapter::ContractFunctionCall"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoFuture-for-FunctionCall%3CB,+M,+D%3E\" class=\"impl\"><a href=\"#impl-IntoFuture-for-FunctionCall%3CB,+M,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B, M, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/into_future/trait.IntoFuture.html\" title=\"trait core::future::into_future::IntoFuture\">IntoFuture</a> for FunctionCall&lt;B, M, D&gt;<div class=\"where\">where\n    FunctionCall&lt;B, M, D&gt;: 'static,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    M: Middleware,\n    D: Detokenize + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"docblock\"><p>[<code>FunctionCall</code>] can be turned into <a href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\"><code>Future</code></a> automatically with <code>.await</code>.\nDefaults to calling [<code>FunctionCall::call</code>].</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/future/into_future/trait.IntoFuture.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;D, ContractError&lt;M&gt;&gt;</h4></section></summary><div class='docblock'>The output that the future will produce on completion.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoFuture\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoFuture\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/future/into_future/trait.IntoFuture.html#associatedtype.IntoFuture\" class=\"associatedtype\">IntoFuture</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = &lt;FunctionCall&lt;B, M, D&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/into_future/trait.IntoFuture.html\" title=\"trait core::future::into_future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/future/into_future/trait.IntoFuture.html#associatedtype.Output\" title=\"type core::future::into_future::IntoFuture::Output\">Output</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of future are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_future\" class=\"method trait-impl\"><a href=\"#method.into_future\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/future/into_future/trait.IntoFuture.html#tymethod.into_future\" class=\"fn\">into_future</a>(self) -&gt; &lt;FunctionCall&lt;B, M, D&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/into_future/trait.IntoFuture.html\" title=\"trait core::future::into_future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/future/into_future/trait.IntoFuture.html#associatedtype.IntoFuture\" title=\"type core::future::into_future::IntoFuture::IntoFuture\">IntoFuture</a></h4></section></summary><div class='docblock'>Creates a future from a value. <a href=\"https://doc.rust-lang.org/nightly/core/future/into_future/trait.IntoFuture.html#tymethod.into_future\">Read more</a></div></details></div></details>","IntoFuture","stark_evm_adapter::ContractFunctionCall"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[18261]}